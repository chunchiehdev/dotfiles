---
- name: Install Docker (Linux)
  block:
    - name: Check if Ubuntu version is supported
      fail:
        msg: "Docker Engine only supports Ubuntu Oracular 24.10, Noble 24.04 LTS, Jammy 22.04 LTS, or Focal 20.04 LTS"
      when: 
        - ansible_os_family == "Debian"
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_release not in ["oracular", "noble", "jammy", "focal"]

    - name: Warn if not pure Ubuntu
      debug:
        msg: "Warning: Docker Engine is not officially supported on Ubuntu derivative distributions (e.g., Linux Mint)"
      when: 
        - ansible_os_family == "Debian"
        - ansible_distribution != "Ubuntu"

    - name: Uninstall conflicting Docker packages
      apt:
        name:
          - docker.io
          - docker-compose
          - docker-compose-v2
          - docker-doc
          - podman-docker
          - containerd
          - runc
        state: absent
        purge: yes
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Check if iptables is installed
      command: dpkg -l iptables
      register: iptables_installed
      failed_when: false
      changed_when: false
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Install iptables if not present
      apt:
        name: iptables
        state: present
      when: 
        - ansible_os_family == "Debian" 
        - not is_wsl
        - iptables_installed.rc != 0
      become: true

    - name: Check if iptables alternatives exist
      shell: update-alternatives --display iptables 2>/dev/null || echo "not exists"
      register: iptables_alternatives
      failed_when: false
      changed_when: false
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Ensure iptables is used instead of nftables
      shell: update-alternatives --set iptables /usr/sbin/iptables-legacy
      when: 
        - ansible_os_family == "Debian" 
        - not is_wsl
        - "'not exists' not in iptables_alternatives.stdout"
      become: true
      
    - name: Install prerequisites for Docker repository
      apt:
        name:
          - ca-certificates
          - curl
        state: present
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Add Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc && chmod a+r /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.asc
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Get system architecture
      shell: dpkg --print-architecture
      register: dpkg_architecture
      changed_when: false
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ dpkg_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Verify Docker installation
      command: docker run --rm hello-world
      register: docker_test
      changed_when: false
      failed_when: docker_test.rc != 0
      when: ansible_os_family == "Debian" and not is_wsl
      become: true

    - name: Add user to docker group
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes
      when: 
        - ansible_os_family == "Debian"
        - "'docker' in ansible_facts.groups"
        - not is_wsl
      become: true
  when: ansible_os_family == "Debian" and not is_wsl

- name: Install Docker Desktop (macOS)
  homebrew_cask:
    name: docker
    state: present
  when: ansible_os_family == "Darwin"
  become: false